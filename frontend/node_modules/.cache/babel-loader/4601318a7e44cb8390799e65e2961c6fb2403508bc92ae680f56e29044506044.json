{"ast":null,"code":"import React from'react';import{createRoot}from'react-dom/client';import{BrowserRouter}from'react-router-dom';import{HelmetProvider}from'react-helmet-async';// <--- ADD THIS IMPORT\nimport App from'./App';import'bootstrap/dist/css/bootstrap.min.css';import'bootstrap-icons/font/bootstrap-icons.css';import'./styles/styles.css';import{jsx as _jsx}from\"react/jsx-runtime\";const container=document.getElementById('root');const root=createRoot(container);root.render(/*#__PURE__*/// <--- WRAP BrowserRouter with HelmetProvider\n_jsx(HelmetProvider,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(App,{})})}));","map":{"version":3,"names":["React","createRoot","BrowserRouter","HelmetProvider","App","jsx","_jsx","container","document","getElementById","root","render","children"],"sources":["D:/Backend-project/frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { HelmetProvider } from 'react-helmet-async'; // <--- ADD THIS IMPORT\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css'; \r\nimport './styles/styles.css';\r\n\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\nroot.render(\r\n  // <--- WRAP BrowserRouter with HelmetProvider\r\n  <HelmetProvider> \r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </HelmetProvider>\r\n);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,aAAa,KAAQ,kBAAkB,CAChD,OAASC,cAAc,KAAQ,oBAAoB,CAAE;AACrD,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,sCAAsC,CAC7C,MAAO,0CAA0C,CACjD,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG7B,KAAM,CAAAC,SAAS,CAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACjD,KAAM,CAAAC,IAAI,CAAGT,UAAU,CAACM,SAAS,CAAC,CAClCG,IAAI,CAACC,MAAM,cACT;AACAL,IAAA,CAACH,cAAc,EAAAS,QAAA,cACbN,IAAA,CAACJ,aAAa,EAAAU,QAAA,cACZN,IAAA,CAACF,GAAG,GAAE,CAAC,CACM,CAAC,CACF,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}